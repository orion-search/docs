(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{102:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));var a=n(2),i=n(6),r=(n(0),n(137)),o={},c={id:"The model config file",isDocsHomePage:!1,title:"The model config file",description:"modelconfig.yaml contains Orion's configuration parameters. Its purpose is to increase Orion's transparency and give you an easy way to modify its data pipeline. modelconfig.yaml does not contain API keys, database configurations and other personal information. These are kept in a .env file and are loaded as environmental variables.",source:"@site/docs/The model config file.mdx",permalink:"/docs/The model config file",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/The model config file.mdx",sidebar:"docs",previous:{title:"Data Pipeline",permalink:"/docs/Data Pipeline"},next:{title:"Operators",permalink:"/docs/Operators"}},l=[{value:"Example of a <code>model_config.yaml</code>",id:"example-of-a-model_configyaml",children:[{value:"Naming the database",id:"naming-the-database",children:[]},{value:"Querying Microsoft Academic Knowledge API",id:"querying-microsoft-academic-knowledge-api",children:[]},{value:"Collecting World bank indicators",id:"collecting-world-bank-indicators",children:[]},{value:"Creating and populating the Elasticsearch index",id:"creating-and-populating-the-elasticsearch-index",children:[]},{value:"Transforming text to vectors with Sentence Transformers",id:"transforming-text-to-vectors-with-sentence-transformers",children:[]},{value:"Fitting UMAP",id:"fitting-umap",children:[]},{value:"Transforming text to vectors with TFIDF and SVD",id:"transforming-text-to-vectors-with-tfidf-and-svd",children:[]},{value:"Creating a country collaboration network",id:"creating-a-country-collaboration-network",children:[]},{value:"Selecting topics for the research indicators and the visualisations",id:"selecting-topics-for-the-research-indicators-and-the-visualisations",children:[]},{value:"Removing low accuracy name-to-gender matches",id:"removing-low-accuracy-name-to-gender-matches",children:[]},{value:"Selecting research indicators parameters",id:"selecting-research-indicators-parameters",children:[]},{value:"Creating S3 buckets",id:"creating-s3-buckets",children:[]},{value:"Creating prefixes for output files",id:"creating-prefixes-for-output-files",children:[]},{value:"Inferring authors&#39; gender",id:"inferring-authors-gender",children:[]},{value:"Mapping country names",id:"mapping-country-names",children:[]},{value:"Identifying non-industry affiliations",id:"identifying-non-industry-affiliations",children:[]},{value:"Identifying open access publications",id:"identifying-open-access-publications",children:[]}]}],s={rightToc:l};function d(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"model_config.yaml")," contains Orion's configuration parameters. Its purpose is to increase Orion's transparency and give you an easy way to modify its data pipeline. ",Object(r.b)("inlineCode",{parentName:"p"},"model_config.yaml")," ",Object(r.b)("strong",{parentName:"p"},"does not")," contain API keys, database configurations and other personal information. These are kept in a ",Object(r.b)("inlineCode",{parentName:"p"},".env")," file and are loaded as environmental variables."),Object(r.b)("h2",{id:"example-of-a-model_configyaml"},"Example of a ",Object(r.b)("inlineCode",{parentName:"h2"},"model_config.yaml")),Object(r.b)("p",null,"We will explain the content of the ",Object(r.b)("inlineCode",{parentName:"p"},"model_config.yaml")," by using the example below."),Object(r.b)("h3",{id:"naming-the-database"},"Naming the database"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"data:\n    db_name: 'misinformation_deployment'\n")),Object(r.b)("p",null,"Creates a database named ",Object(r.b)("inlineCode",{parentName:"p"},"misinformation_deployment")," and instantiates the required tables."),Object(r.b)("h3",{id:"querying-microsoft-academic-knowledge-api"},"Querying Microsoft Academic Knowledge API"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"data:\n    mag:\n        query_values: ['biorxiv', 'medrxiv']\n        entity_name: 'J.JN'\n        metadata: ['Id', 'Ti', 'S']\n        with_doi: True\n        mag_start_date: '2000-01-01'\n        mag_end_date: 'today'\n        intervals_in_a_year: 2\n")),Object(r.b)("p",null,"Orion creates a composite query that will retrieve papers published (",Object(r.b)("inlineCode",{parentName:"p"},"entity_name"),") in bioRxiv or medRxiv (",Object(r.b)("inlineCode",{parentName:"p"},"query_values"),"). It will only collect papers with a DOI (",Object(r.b)("inlineCode",{parentName:"p"},"with_doi"),") that were published between 01-01-2000 (",Object(r.b)("inlineCode",{parentName:"p"},"mag_start_date"),") and today, whenever that is (",Object(r.b)("inlineCode",{parentName:"p"},"mag_end_date"),"). Orion will query each year separately, split it in two periods (",Object(r.b)("inlineCode",{parentName:"p"},"intervals_in_a_year"),") and for every paper, it will collect its id, title and source (",Object(r.b)("inlineCode",{parentName:"p"},"metadata"),")."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"How to query MAG with a conference name?")),Object(r.b)("p",null,"Change the ",Object(r.b)("inlineCode",{parentName:"p"},"query_values")," and ",Object(r.b)("inlineCode",{parentName:"p"},"entity_name"),". For example, the snippet below will collect papers presented at the ACL."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"mag:\n    query_values: ['acl']\n    entity_name: 'C.CN'\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"The journal, conference and field of study must match the Microsoft Academic Graph format. To find the right format, start typing your query to the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://academic.microsoft.com/home"}),"Microsoft Academic")," and it will recommend you the appropriate format.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"How to query MAG with a field of study?")),Object(r.b)("p",null,"Change the ",Object(r.b)("inlineCode",{parentName:"p"},"query_values")," and ",Object(r.b)("inlineCode",{parentName:"p"},"entity_name"),". For example, the snippet below will collect papers with machine learning or deep learning as a field of study."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"mag:\n    query_values: ['machine learning', 'deep learning']\n    entity_name: 'F.FN'\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("inlineCode",{parentName:"p"},"query_values")," can take multiple inputs, as we did in the first example. Note that this works as an OR query; Orion will retrieve papers published either in bioRxiv or medRxiv, or in both.")),Object(r.b)("h3",{id:"collecting-world-bank-indicators"},"Collecting World bank indicators"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'data:   \n    wb:\n        end_year: "2019"\n        country: "all"\n        table_names: ["wb_gdp"]\n        indicators: ["NY.GDP.MKTP.CD"]\n')),Object(r.b)("p",null,"Collects data on the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://data.worldbank.org/indicator/NY.GDP.MKTP.CD"}),"NY.GDP.MKTP.CD")," World Bank indicator (",Object(r.b)("inlineCode",{parentName:"p"},"indicators"),") for every country (",Object(r.b)("inlineCode",{parentName:"p"},"country"),") and year till 2019 (",Object(r.b)("inlineCode",{parentName:"p"},"end_year"),"). It stores the data in a table named ",Object(r.b)("inlineCode",{parentName:"p"},"wb_gdp")," (",Object(r.b)("inlineCode",{parentName:"p"},"table_names"),"). You can collect multiple indicators by extending the extending the ",Object(r.b)("inlineCode",{parentName:"p"},"indicators")," and ",Object(r.b)("inlineCode",{parentName:"p"},"table_names")," lists."),Object(r.b)("p",null,"You have to create an ORM and create the table for each new indicator."),Object(r.b)("p",null,"By default, Orion fetches the following indicators and creates their corresponding tables:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'data:\n    wb:\n        end_year: "2019"\n        country: "all"\n        table_names: ["wb_gdp", "wb_rnd_expenditure", "wb_edu_expenditure", "wb_female_workforce"]\n        indicators: ["NY.GDP.MKTP.CD", "GB.XPD.RSDV.GD.ZS", "SE.XPD.TOTL.GD.ZS", "SL.TLF.CACT.FM.ZS"]\n')),Object(r.b)("h3",{id:"creating-and-populating-the-elasticsearch-index"},"Creating and populating the Elasticsearch index"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"elasticsearch:\n    erase_index: True\n")),Object(r.b)("p",null,"Erases the existing Elasticsearch index when the ",Object(r.b)("inlineCode",{parentName:"p"},"erase_index")," is set to ",Object(r.b)("inlineCode",{parentName:"p"},"True"),". Set to ",Object(r.b)("inlineCode",{parentName:"p"},"False")," if you want to add documents to the existing index."),Object(r.b)("h3",{id:"transforming-text-to-vectors-with-sentence-transformers"},"Transforming text to vectors with Sentence Transformers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"sentence_bert:\n    bert_model: 'distilbert-base-nli-stsb-mean-tokens'\n    batch_size: 1000\n")),Object(r.b)("p",null,"Uses a pretrained sentence-DistilBERT (",Object(r.b)("inlineCode",{parentName:"p"},"bert_model"),") and to encode batches of 1,000 documents (",Object(r.b)("inlineCode",{parentName:"p"},"batch_size"),"). You can choose any transformer model from this ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.google.com/spreadsheets/d/14QplCdTCDwEmTqrn1LH4yrbKvdogK4oQvYO1K1aPR5M/edit?usp=gmail#gid=0"}),"list"),"."),Object(r.b)("h3",{id:"fitting-umap"},"Fitting UMAP"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"umap:\n    n_neighbors: 10\n    n_components: 2\n    metric: 'cosine'\n    min_dist: .01\n    exclude: [2767711857, 2783409909]\n")),Object(r.b)("p",null,"Reduces the dimensionality of the text embeddings with UMAP. You can provide a list of paper IDs to exclude before the model fitting. Leave the list empty if you want to fit a UMAP with all the documents (recommended for the first run)."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"umap:\n    n_neighbors: 10\n    n_components: 2\n    metric: 'cosine'\n    min_dist: .01\n    exclude: []\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"You may need to experiment with UMAP and run it multiple times to get the desired low dimensional projection. Read the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://umap-learn.readthedocs.io/en/latest/parameters.html"}),"UMAP documentation")," and this ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://pair-code.github.io/understanding-umap/"}),"blog")," on how to tune UMAP effectively.  ")),Object(r.b)("h3",{id:"transforming-text-to-vectors-with-tfidf-and-svd"},"Transforming text to vectors with TFIDF and SVD"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"tfidf:\n    max_features: 120000\n\nsvd:\n    n_components: 500\n")),Object(r.b)("p",null,"Vectorises documents with TFIDF and reduces their dimensionality with Singular Value Decomposition. You can change the length of the TFIDF and SVD vector by modifying the ",Object(r.b)("inlineCode",{parentName:"p"},"max_features")," and ",Object(r.b)("inlineCode",{parentName:"p"},"n_components")," parameters respectively. "),Object(r.b)("h3",{id:"creating-a-country-collaboration-network"},"Creating a country collaboration network"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"country_collaboration:\n    year: '2013'\n")),Object(r.b)("p",null,"Considers academic documents published after 2013 (",Object(r.b)("inlineCode",{parentName:"p"},"year"),"). "),Object(r.b)("h3",{id:"selecting-topics-for-the-research-indicators-and-the-visualisations"},"Selecting topics for the research indicators and the visualisations"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"topic_filter:\n    levels: [1]\n    percentiles: [75]\n")),Object(r.b)("p",null,"Orion leverages ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://arxiv.org/abs/1805.12216"}),"MAG's Field of Study taxonomy")," to create a set of topics that are granular enough to make meaningful comparisons and broad enough to capture the diversity of the research topics in the data. In the snippet above, it considers only the ",Object(r.b)("inlineCode",{parentName:"p"},"level")," one topics and the Fields of Study with a frequency in the 75th ",Object(r.b)("inlineCode",{parentName:"p"},"percentile"),". "),Object(r.b)("p",null,"You can also select topics from multiple levels and percentiles. For example, this snippet would consider the levels one and three and the Fields of Study with a frequency in the 75th and the 50th percentiles respectively. "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"topic_filter:\n    levels: [1,3]\n    percentiles: [75, 50]\n")),Object(r.b)("h3",{id:"removing-low-accuracy-name-to-gender-matches"},"Removing low accuracy name-to-gender matches"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"gender_diversity:\n    threshold: .75\n")),Object(r.b)("p",null,"Consider name-to-gender matches with an accuracy higher than .75% (",Object(r.b)("inlineCode",{parentName:"p"},"threshold"),"). We advise keeping this threshold relatively high and monitor how it affects the metrics. "),Object(r.b)("h3",{id:"selecting-research-indicators-parameters"},"Selecting research indicators parameters"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"metrics:\n    year: '2013'\n    paper_count_low: 10\n    fos_count: 15\n")),Object(r.b)("p",null,"Considers academic documents published after 2013 (",Object(r.b)("inlineCode",{parentName:"p"},"year"),") and filters countries prior to calculating the research indicators:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Research specialisation"),": Filters countries with less than 10 publications in a year (",Object(r.b)("inlineCode",{parentName:"li"},"paper_count_low"),")"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Gender diversity"),": Filters countries with less than 10 publications in a year (",Object(r.b)("inlineCode",{parentName:"li"},"paper_count_low"),")"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Research diversity:")," Filters countries with less than 15 academic documents containing the field of study that the indicator is measured for (",Object(r.b)("inlineCode",{parentName:"li"},"fos_count"),").")),Object(r.b)("p",null,"Use thresholds to remove any countries with a low number of academic documents to avoid procuding misleading indicators."),Object(r.b)("h3",{id:"creating-s3-buckets"},"Creating S3 buckets"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'s3_buckets:\n    mag: "mag-data-dump"\n    gender: "names-batches"\n    text_vectors: "document-vectors"\n    topic: "mag-topics"\n')),Object(r.b)("p",null,"Creates four S3 buckets that are used in Orion's pipeline: "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"mag-data-bucket")," contains the raw response from MAG API."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"names-batches")," contains batched author names that Orion queries GenderAPI with."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"document-vectors")," contains the Faiss index that is used in the search engine. When using the TFIDF+SVD approach to vectorise documents, Orion stores the TFIDF vectors in this bucket too."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"mag-topics")," contains the filtered topics that are used to produce the research indicators and the visualisations.")),Object(r.b)("p",null,"You can rename these buckets. "),Object(r.b)("h3",{id:"creating-prefixes-for-output-files"},"Creating prefixes for output files"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'prefix:\n    gender: "batched_names"\n    text_vectors: "doc_vectors"\n    topic: "filtered_topics"\n')),Object(r.b)("p",null,"Adds a prefix to files before storing them on S3. These are intermediate outputs used in downstream tasks. You don't need to change them."),Object(r.b)("h3",{id:"inferring-authors-gender"},"Inferring authors' gender"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"batch_size: 20000\nparallel_tasks: 4\n")),Object(r.b)("p",null,"Orion creates four batches (",Object(r.b)("inlineCode",{parentName:"p"},"parallel_tasks"),") with 20,000 author names each (",Object(r.b)("inlineCode",{parentName:"p"},"batch_size"),") before querying them to GenderAPI, a name-to-gender inference service. If you are running Orion for a new data collection, you are advised to set the ",Object(r.b)("inlineCode",{parentName:"p"},"batch_size")," high enough to cover all author names. If you do not do so, some of them will not be passed to the GenderAPI. No need to worry though. Orion's ETL label the rest of the names once you rerun that part of the pipeline."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Consider how many cores your machine has before choosing the number of ",Object(r.b)("inlineCode",{parentName:"p"},"parallel_tasks"),".")),Object(r.b)("h3",{id:"mapping-country-names"},"Mapping country names"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"country_name_mapping:\n    google2wb : {'Czechia':'Czech Republic', \"C\xf4te d'Ivoire\":\"Cote d'Ivoire\"}\n    google2restcountries : {'United States':'United States of America'}\n")),Object(r.b)("p",null,"Homogenises country names between the Google Places API and the World Bank (",Object(r.b)("inlineCode",{parentName:"p"},"google2wb"),") and the Google Places API and restcountries API (",Object(r.b)("inlineCode",{parentName:"p"},"google2restcountries"),"). Orion's ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/orion-search/orion/blob/dev/model_config.yaml"}),Object(r.b)("inlineCode",{parentName:"a"},"model_config.yaml"))," contains the full mapping and you do not have to make any changes."),Object(r.b)("h3",{id:"identifying-non-industry-affiliations"},"Identifying non-industry affiliations"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"affiliations:\n    non_profit: ['university', 'foundation', 'institution', 'universidade']\n")),Object(r.b)("p",null,"Uses a hand-crafted list of terms or names to tag an author affiliation as non-industry or industry. You can find and modify the full list in Orion's ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/orion-search/orion/blob/dev/model_config.yaml"}),Object(r.b)("inlineCode",{parentName:"a"},"model_config.yaml")),"."),Object(r.b)("h3",{id:"identifying-open-access-publications"},"Identifying open access publications"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"open_access: ['arxiv computation and language']\n")),Object(r.b)("p",null,"Uses a hand-crafted list of terms or journal names to tag an academic publication as open access. You can find and modify the full list in Orion's ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/orion-search/orion/blob/dev/model_config.yaml"}),Object(r.b)("inlineCode",{parentName:"a"},"model_config.yaml")),"."))}d.isMDXComponent=!0},137:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),d=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=d(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=d(n),m=a,u=b["".concat(o,".").concat(m)]||b[m]||p[m]||r;return n?i.a.createElement(u,c(c({ref:t},s),{},{components:n})):i.a.createElement(u,c({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<r;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);